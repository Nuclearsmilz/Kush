plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
   maven {
	   name 'GeckoLib'
	   url 'https://repo.repsy.io/mvn/gandiber/geckolib'
   }

	maven {
		name "NBT Crafting"
		url "https://maven.siphalor.de"
	}

	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}

}

dependencies {
    minecraft "com.mojang:minecraft:1.16.5"
    mappings "net.fabricmc:yarn:1.16.5+build.5:v2"
    modImplementation "net.fabricmc:fabric-loader:0.11.1"
            
    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.30.3+1.16"

	//GeckoLib
	modImplementation "software.bernie.geckolib:fabric-1.16.5-geckolib:3.0.13:dev"

	//NBT Crafting
	modImplementation "de.siphalor:nbtcrafting-1.16:2+"

	//Alex IIl; libmultipart & libblockattributes
	modCompile "alexiil.mc.lib:libmultipart-all:0.3.4"
	modCompile "alexiil.mc.lib:libblockattributes-all:0.8.4"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
    
    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
